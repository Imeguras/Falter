buildscript {
    repositories {
        mavenCentral()
        //jcenter()
        maven {
            name = 'forge'
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        //1.2-SNAPSHOT
        //classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}
repositories {
    maven {
        name = "chickenbones"
        url = "https://chickenbones.net/maven/"
    }
}

apply plugin: 'forge'

//read config at gradle.properties
ext.configFile = file('gradle.properties')

version = "${config.version}-${config.build_number}"
group = config.org
archivesBaseName = config.mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version="${config.version}-${config.forge_version}-${config.version}"
    //runDir = "eclipse"
	replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version
}

dependencies {
    compile files(
            'Baubles-deobf.jar'
    )
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.109:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.2.9:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.2.15:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.1.320:dev"

}

//dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

//}

processResources
{
    // this will ensure that this task is redone when the versions change.
    //inputs.property "version", "${config.build_number}"
    //inputs.property "mcversion", "${config.version}"
	
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':"${config.build_number}", 'mcversion':"${config.version}", 'description':"${config.description}", 'url':"${config.mod_url}", 'authorList':["${config.mod_author}"], 'credits':"${config.mod_credits}", 'logoFile':"${config.mod_logo}"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar){
	from(sourceSets.main.allJava){
		include 'com/imeguras/falter/api/**'
	}
	classifier = 'api'
}

artifacts {
	archives apiJar
}
def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}
jar {
    manifest {
            attributes "FMLCorePlugin": "${config.org}.asm.CoreLoader"
		attributes "FMLCorePluginContainsFMLMod": "${config.org}.${config.mod_name}"
    }
}